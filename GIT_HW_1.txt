GIT Homework 1

Для выполнения задания у вас должен быть установлен для Windows - GitBash.
Создан аккаунт в GitHub

Все шаги сценария выполняйте в терминале GitBush, Terminal, в папке под гитом.

Как отправить ДЗ на проверку.
 1. Создайте текстоовый файл как в первом ДЗ по Terminal.
 2. Сценарий перенесите в этот файл.
 3. На против каждого действия - напишите команду в GitBash

Файл со сценарием и ссылку на свой гит хаб отправляйте менторам на проверку.

JSON
 4. Создать внешний репозиторий c названием JSON.
• https://github.com/ - Creat a new repository - Repository name "JSON" - check "Public" + Add a README file - Create repository

 5. Клонировать репозиторий JSON на локальный компьютер.
• git clone https://github.com/9110242482/JSON.git

 6. Внутри локального JSON создать файл “new.json”.
• touch new.json

 7. Добавить файл под гит.
• git add new.json

 8. Закоммитить файл.
• git commit -m "create new.json"

 9. Отправить файл на внешний GitHub репозиторий.
• git push

 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
• vim new.json
ссылка на репозиторий с файлом https://github.com/9110242482/JSON.git

11. Отправить изменения на внешний репозиторий.
• git add new.json
• git commit -m "change new.json"
• git push

 12. Создать файл preferences.json
• touch preferences.json

 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
• vim preferences.json
ссылка на репозиторий с файлом https://github.com/9110242482/JSON.git

 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
• vim skills.json
ссылка на репозиторий с файлом https://github.com/9110242482/JSON.git

 15. Отправить сразу 2 файла на внешний репозиторий.
• git add .
• git commit -m "create preferences.json and skills.json"
• git push

 16. На веб интерфейсе создать файл bug_report.json.
• Add file - Create new file - Name your file: "bug_report.json" 

 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
• Commit new file

 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
• Edit this file
ссылка на репозиторий с файлом https://github.com/9110242482/JSON.git

 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
• Commit changes

 20. Синхронизировать внешний и локальный репозиторий JSON
• git pull

XML
 21. Создать внешний репозиторий c названием XML.
• https://github.com/ - Creat a new repository - Repository name "XML" - check "Public" + Add a README file - Create repository

 22. Клонировать репозиторий XML на локальный компьютер.
• git clone https://github.com/9110242482/XML.git

 23. Внутри локального XML создать файл “new.xml”.
• touch new.xml

 24. Добавить файл под гит.
• git add new.xml

 25. Закоммитить файл.
• git commit -m "create new.xml"

 26. Отправить файл на внешний GitHub репозиторий.
• git push

 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
 • vim new.xml
ссылка на репозиторий с файлом https://github.com/9110242482/XML.git

 28. Отправить изменения на внешний репозиторий.
• git add new.xml
• git commit -m "change new.xml"
• git push

 29. Создать файл preferences.xml
• touch preferences.xml

 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
• vim preferences.xml
ссылка на репозиторий с файлом https://github.com/9110242482/XML.git

 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
• vim skills.xml
ссылка на репозиторий с файлом https://github.com/9110242482/XML.git

 32. Сделать коммит в одну строку.
• git add .
• git commit -m "create preferences.xml and skills.xml"

 33. Отправить сразу 2 файла на внешний репозиторий.
• git push

 34. На веб интерфейсе создать файл bug_report.xml.
• Add file - Create new file - Name your file: "bug_report.xml" 
ссылка на репозиторий с файлом https://github.com/9110242482/TXT.git

 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
• Commit new file

 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
• Edit this file
ссылка на репозиторий с файлом https://github.com/9110242482/XML.git

 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
• Commit changes

 38. Синхронизировать внешний и локальный репозиторий XML
• git pull

TXT
 1. Создать внешний репозиторий c названием TXT.
• https://github.com/ - Creat a new repository - Repository name "TXT" - check "Public" + Add a README file - Create repository

 2. Клонировать репозиторий TXT на локальный компьютер.
• git clone https://github.com/9110242482/TXT.git

 3. Внутри локального TXT создать файл “new.txt”.
• touch new.txt

 4. Добавить файл под гит.
• git add new.xml

 5. Закоммитить файл.
• git commit -m "create new.txt"

 6. Отправить файл на внешний GitHub репозиторий.
• git push

 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.
• vim new.txt
ссылка на репозиторий с файлом https://github.com/9110242482/TXT.git

 8. Отправить изменения на внешний репозиторий.
• git add new.txt
• git commit -m "change new.txt"
• git push

 9. Создать файл preferences.txt
• touch preferences.txt

 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.
• vim preferences.txt
ссылка на репозиторий с файлом https://github.com/9110242482/TXT.git

 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT
• vim skills.txt
ссылка на репозиторий с файлом https://github.com/9110242482/TXT.git

 12. Сделать коммит в одну строку.
• git add .
• git commit -m "create preferences.txt and skills.txt"

 13. Отправить сразу 2 файла на внешний репозиторий.
• git push

 14. На веб интерфейсе создать файл bug_report.txt.
• Add file - Create new file - Name your file: "bug_report.txt" 
ссылка на репозиторий с файлом https://github.com/9110242482/TXT.git

 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
• Commit new file

 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.
• Edit this file
ссылка на репозиторий с файлом https://github.com/9110242482/TXT.git

 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
• Commit changes

 18. Синхронизировать внешний и локальный репозиторий TXT
• git pull
